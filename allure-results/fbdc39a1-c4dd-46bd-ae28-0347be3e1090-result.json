{"name": "Успешная регистрация студента с полными данными", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4.0s, while waiting for:\nbrowser.element(('css selector', '.table')).all(('css selector', 'td'))[1::2].has exact texts ('Max Razzhivin', 'max.nvo06@gmail.com', 'Male', '9094618666', '06 April,1989', 'Computer Science', 'Sports, Reading', 'picta.png', 'somewhere in galaxy', 'NCR Delhi')\n\nReason: NoSuchElementException: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".table\"}\n  (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nScreenshot: file:///Users/maxnovo/.selene/screenshots/1752685440679/1752685440679.png\nPageSource: file:///Users/maxnovo/.selene/screenshots/1752685440679/1752685440679.html", "trace": "fn = <selene.core.conditions.CollectionCondition object at 0x10317f980>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self.entity)\n                       ^^^^^^^^^^^^^^^\n\n.venv/lib/python3.12/site-packages/selene/core/wait.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.12/site-packages/selene/core/condition.py:174: in __call__\n    return self._fn(entity)\n           ^^^^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/condition.py:144: in fn\n    actual = query(entity)\n             ^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/match.py:389: in visible_texts\n    webelement.text for webelement in collection() if webelement.is_displayed()\n                                      ^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/entity.py:648: in __call__\n    return self.locate()\n           ^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/entity.py:641: in locate\n    return self._locator()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/locator.py:34: in __call__\n    return self._locate()\n           ^^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/entity.py:719: in find\n    webelements = self()\n                  ^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/entity.py:648: in __call__\n    return self.locate()\n           ^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/entity.py:641: in locate\n    return self._locator()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/locator.py:34: in __call__\n    return self._locate()\n           ^^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/entity.py:249: in <lambda>\n    Locator(f'{self}.all({by})', lambda: self().find_elements(*by)),\n                                         ^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/entity.py:192: in __call__\n    return self.locate()\n           ^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/entity.py:185: in locate\n    return self._locator()\n           ^^^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/locator.py:34: in __call__\n    return self._locate()\n           ^^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/_browser.py:71: in <lambda>\n    Locator(f'{self}.element({by})', lambda: self.driver.find_element(*by)),\n                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:922: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1031712e0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...000184a4ec0c _pthread_start + 136\\\\n15  libsystem_pthread.dylib             0x0000000184a49b80 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".table\"}\nE         (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nE       Stacktrace:\nE       0   chromedriver                        0x00000001050e5d14 cxxbridge1$str$ptr + 2735276\nE       1   chromedriver                        0x00000001050ddf88 cxxbridge1$str$ptr + 2703136\nE       2   chromedriver                        0x0000000104c2e6f0 cxxbridge1$string$len + 90424\nE       3   chromedriver                        0x0000000104c759e0 cxxbridge1$string$len + 381992\nE       4   chromedriver                        0x0000000104cb70c8 cxxbridge1$string$len + 650000\nE       5   chromedriver                        0x0000000104c69be8 cxxbridge1$string$len + 333360\nE       6   chromedriver                        0x00000001050a9598 cxxbridge1$str$ptr + 2487600\nE       7   chromedriver                        0x00000001050ac830 cxxbridge1$str$ptr + 2500552\nE       8   chromedriver                        0x0000000105089c14 cxxbridge1$str$ptr + 2358188\nE       9   chromedriver                        0x00000001050ad0b8 cxxbridge1$str$ptr + 2502736\nE       10  chromedriver                        0x000000010507adec cxxbridge1$str$ptr + 2297220\nE       11  chromedriver                        0x00000001050cd420 cxxbridge1$str$ptr + 2634680\nE       12  chromedriver                        0x00000001050cd5ac cxxbridge1$str$ptr + 2635076\nE       13  chromedriver                        0x00000001050ddbd4 cxxbridge1$str$ptr + 2702188\nE       14  libsystem_pthread.dylib             0x0000000184a4ec0c _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x0000000184a49b80 thread_start + 8\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\n    @allure.tag(\"web\")\n    @allure.title(\"Успешная регистрация студента с полными данными\")\n    @allure.label(\"owner\", \"Max Razzhivin\")\n    @allure.feature(\"Форма для заполнения студентом своих данных\")\n    @allure.story(\"Форма корректно заполняется и результаты корректные\")\n    @allure.link(\"https://demoqa.com/automation-practice-form\", \"Test\")\n    @allure.severity(Severity.CRITICAL)\n    def test_complete_do():\n        # GIVEN:\n        registration_page = RegistrationPage()\n        registration_page.open()\n    \n        # WHEN\n        registration_page.fill_first_name('Max')\n        registration_page.fill_last_name('Razzhivin')\n        registration_page.fill_email('max.nvo06@gmail.com')\n        registration_page.fill_gender('Male')\n    \n        registration_page.fill_user_number('9094618666')\n    \n        # Выбираем дату рождения:\n        registration_page.fill_date_of_birth('1989', 'Apr', '06')\n    \n        # Предметы\n        registration_page.fill_subjects('Computer Science')\n    \n    \n        # Хобби\n        registration_page.fill_hobbies('Sports', 'Reading')\n    \n        registration_page.fill_image()\n    \n        registration_page.fill_address('somewhere in galaxy')\n    \n        registration_page.fill_state('NCR')\n        registration_page.fill_city('Delhi')\n    \n        registration_page.submit()\n    \n        # THEN\n>       registration_page.should_registered_user_with(\"Max Razzhivin\",\n                \"max.nvo06@gmail.com\",\n                'Male',\n                '9094618666',\n                '06 April,1989',\n                'Computer Science',\n                'Sports, Reading',\n                'picta.png',\n                'somewhere in galaxy',\n                'NCR Delhi',)\n\ntests/test_page_object.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/registration_page.py:121: in should_registered_user_with\n    browser.element(\".table\").all('td').even.should(\n.venv/lib/python3.12/site-packages/selene/core/entity.py:132: in should\n    self.wait.for_(condition)\n.venv/lib/python3.12/site-packages/selene/core/wait.py:150: in for_\n    return self._decorator(self)(logic)(fn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfn = <selene.core.conditions.CollectionCondition object at 0x10317f980>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n                return fn(self.entity)\n            except Exception as reason:\n                if time.time() > finish_time:\n                    reason_string = '{name}: {message}'.format(\n                        name=reason.__class__.__name__,\n                        message=getattr(reason, \"msg\", str(reason)),\n                    )\n                    # TODO: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                    # stacktrace = getattr(reason, 'stacktrace', None)\n                    # TODO: should we have an option to turn on stacktrace logging?\n                    timeout = self._timeout\n                    entity = self.entity\n    \n                    # if it's a normal function, it should have __qualname__,\n                    # then use it, otherwise use str(fn)\n                    fn_name = getattr(\n                        fn,\n                        '__qualname__',\n                        getattr(fn, '__str__', lambda: str(fn))(),\n                    )\n    \n                    failure = TimeoutException(\n                        f'\\n'\n                        f'\\nTimed out after {timeout}s, while waiting for:'\n                        f'\\n{entity}.{fn_name}'\n                        f'\\n'\n                        f'\\nReason: {reason_string}'\n                    )\n    \n>                   raise self._hook_failure(failure)\nE                   selene.core.exceptions.TimeoutException: Message: \nE                   \nE                   Timed out after 4.0s, while waiting for:\nE                   browser.element(('css selector', '.table')).all(('css selector', 'td'))[1::2].has exact texts ('Max Razzhivin', 'max.nvo06@gmail.com', 'Male', '9094618666', '06 April,1989', 'Computer Science', 'Sports, Reading', 'picta.png', 'somewhere in galaxy', 'NCR Delhi')\nE                   \nE                   Reason: NoSuchElementException: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".table\"}\nE                     (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nE                   Screenshot: file:///Users/maxnovo/.selene/screenshots/1752685440679/1752685440679.png\nE                   PageSource: file:///Users/maxnovo/.selene/screenshots/1752685440679/1752685440679.html\n\n.venv/lib/python3.12/site-packages/selene/core/wait.py:148: TimeoutException"}, "steps": [{"name": "Открываем браузер и удаляем рекламу", "status": "passed", "start": 1752685442704, "stop": 1752685446689}, {"name": "Заполняем имя: 'Max'", "status": "passed", "parameters": [{"name": "value", "value": "'Max'"}], "start": 1752685446689, "stop": 1752685446764}, {"name": "Заполняем фамилию: 'Razzhivin'", "status": "passed", "parameters": [{"name": "value", "value": "'Razzhivin'"}], "start": 1752685446764, "stop": 1752685446786}, {"name": "Заполняем почту: 'max.nvo06@gmail.com'", "status": "passed", "parameters": [{"name": "value", "value": "'max.nvo06@gmail.com'"}], "start": 1752685446786, "stop": 1752685446803}, {"name": "Выбираем пол: 'Male'", "status": "passed", "parameters": [{"name": "value", "value": "'Male'"}], "start": 1752685446804, "stop": 1752685446833}, {"name": "Заполняем номер телефона: '9094618666'", "status": "passed", "parameters": [{"name": "value", "value": "'9094618666'"}], "start": 1752685446833, "stop": 1752685446851}, {"name": "Заполняем дату рождения: '1989' 'Apr' '06'", "status": "passed", "parameters": [{"name": "year", "value": "'1989'"}, {"name": "month", "value": "'Apr'"}, {"name": "day", "value": "'06'"}], "start": 1752685446852, "stop": 1752685446976}, {"name": "Выбираем предметы: 'Computer Science'", "status": "passed", "parameters": [{"name": "value", "value": "'Computer Science'"}], "start": 1752685446976, "stop": 1752685447015}, {"name": "Выбираем хобби: 'Sports' 'Reading'", "status": "passed", "parameters": [{"name": "value1", "value": "'Sports'"}, {"name": "value2", "value": "'Reading'"}], "start": 1752685447015, "stop": 1752685449726}, {"name": "Загружаем картинку", "status": "passed", "start": 1752685449726, "stop": 1752685449752}, {"name": "Заполняем адрес: 'somewhere in galaxy'", "status": "passed", "parameters": [{"name": "value", "value": "'somewhere in galaxy'"}], "start": 1752685449752, "stop": 1752685449786}, {"name": "Выбираем штат: 'NCR'", "status": "passed", "parameters": [{"name": "value", "value": "'NCR'"}], "start": 1752685449786, "stop": 1752685449833}, {"name": "Выбираем город: 'Delhi'", "status": "passed", "parameters": [{"name": "value", "value": "'Delhi'"}], "start": 1752685449833, "stop": 1752685449875}, {"name": "Нажимаем кнопку \"submit\"", "status": "passed", "start": 1752685449875, "stop": 1752685449883}, {"name": "Проверяем результаты формы", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4.0s, while waiting for:\nbrowser.element(('css selector', '.table')).all(('css selector', 'td'))[1::2].has exact texts ('Max Razzhivin', 'max.nvo06@gmail.com', 'Male', '9094618666', '06 April,1989', 'Computer Science', 'Sports, Reading', 'picta.png', 'somewhere in galaxy', 'NCR Delhi')\n\nReason: NoSuchElementException: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".table\"}\n  (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nScreenshot: file:///Users/maxnovo/.selene/screenshots/1752685440679/1752685440679.png\nPageSource: file:///Users/maxnovo/.selene/screenshots/1752685440679/1752685440679.html\n\n", "trace": "  File \"/Users/maxnovo/Desktop/qa.guru/18.08 Page_Object/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/maxnovo/Desktop/qa.guru/18.08 Page_Object/pages/registration_page.py\", line 121, in should_registered_user_with\n    browser.element(\".table\").all('td').even.should(\n  File \"/Users/maxnovo/Desktop/qa.guru/18.08 Page_Object/.venv/lib/python3.12/site-packages/selene/core/entity.py\", line 132, in should\n    self.wait.for_(condition)\n  File \"/Users/maxnovo/Desktop/qa.guru/18.08 Page_Object/.venv/lib/python3.12/site-packages/selene/core/wait.py\", line 150, in for_\n    return self._decorator(self)(logic)(fn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/maxnovo/Desktop/qa.guru/18.08 Page_Object/.venv/lib/python3.12/site-packages/selene/core/wait.py\", line 148, in logic\n    raise self._hook_failure(failure)\n"}, "parameters": [{"name": "full_name", "value": "'Max Razzhivin'"}, {"name": "email", "value": "'max.nvo06@gmail.com'"}, {"name": "gender", "value": "'Male'"}, {"name": "mobile", "value": "'9094618666'"}, {"name": "date_of_birth", "value": "'06 April,1989'"}, {"name": "subject", "value": "'Computer Science'"}, {"name": "hobbies", "value": "'Sports, Reading'"}, {"name": "image_name", "value": "'picta.png'"}, {"name": "address", "value": "'somewhere in galaxy'"}, {"name": "state_city", "value": "'NCR Delhi'"}], "start": 1752685449883, "stop": 1752685453981}], "attachments": [{"name": "log", "source": "bb19dfc6-0194-42e7-b1ab-fa3fa6502f38-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "e64a256d-8515-439b-babe-3d23aba4c841-attachment.txt", "type": "text/plain"}], "start": 1752685442703, "stop": 1752685453984, "uuid": "92dcec19-ed6c-43e0-8819-56863f345f81", "historyId": "f8638fbca7d3fb3e8502a78a75c9b25b", "testCaseId": "f8638fbca7d3fb3e8502a78a75c9b25b", "fullName": "tests.test_page_object#test_complete_do", "labels": [{"name": "story", "value": "Форма корректно заполняется и результаты корректные"}, {"name": "feature", "value": "Форма для заполнения студентом своих данных"}, {"name": "tag", "value": "web"}, {"name": "owner", "value": "Max Razzhivin"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_page_object"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "26653-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_page_object"}], "links": [{"type": "Test", "url": "https://demoqa.com/automation-practice-form", "name": "https://demoqa.com/automation-practice-form"}]}