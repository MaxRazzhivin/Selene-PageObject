{"name": "Успешная регистрация студента с полными данными", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4.0s, while waiting for:\nbrowser.all(('css selector', '.custom-checkbox')).element_by(has exact text Sports).click\n\nReason: ElementClickInterceptedException: Element <div class=\"custom-control custom-checkbox custom-control-inline\"> is not clickable at point (492,579) because another element <td> obscures it; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nScreenshot: file:///Users/maxnovo/.selene/screenshots/1753092943173/1753092943173.png\nPageSource: file:///Users/maxnovo/.selene/screenshots/1753092943173/1753092943173.html", "trace": "fn = <selene.core.wait.Command object at 0x1075b2810>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self.entity)\n                       ^^^^^^^^^^^^^^^\n\n.venv/lib/python3.12/site-packages/selene/core/wait.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.12/site-packages/selene/core/wait.py:61: in __call__\n    return self._fn(entity)\n           ^^^^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selene/core/entity.py:525: in raw_click\n    element.locate().click()\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1075b0fe0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <div class=\\\\\"custom-contro...scuredElement\":\"<div class=\\\\\"custom-control custom-checkbox custom-control-inline\\\\\">\",\"overlayingElement\":\"<td>\"}}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div class=\"custom-control custom-checkbox custom-control-inline\"> is not clickable at point (492,579) because another element <td> obscures it; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:351:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:175:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:134:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:327:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:210:31\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\n    @allure.tag(\"web\")\n    @allure.title(\"Успешная регистрация студента с полными данными\")\n    @allure.label(\"owner\", \"Max Razzhivin\")\n    @allure.feature(\"Форма для заполнения студентом своих данных\")\n    @allure.story(\"Форма корректно заполняется и результаты корректные\")\n    @allure.link(\"https://demoqa.com/automation-practice-form\", \"Test\")\n    @allure.severity(Severity.CRITICAL)\n    def test_complete_do():\n        # GIVEN:\n        registration_page = RegistrationPage()\n        registration_page.open()\n    \n        # WHEN\n        registration_page.fill_first_name('Max')\n        registration_page.fill_last_name('Razzhivin')\n        registration_page.fill_email('max.nvo06@gmail.com')\n        registration_page.fill_gender('Male')\n    \n        registration_page.fill_user_number('9094618666')\n    \n        # Выбираем дату рождения:\n        registration_page.fill_date_of_birth('1989', 'Apr', '06')\n    \n        # Предметы\n        registration_page.fill_subjects('Computer Science')\n    \n    \n        # Хобби\n>       registration_page.fill_hobbies('Sports', 'Reading')\n\ntests/test_page_object.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/registration_page.py:92: in fill_hobbies\n    self.all_hobbies_field.element_by(have.exact_text(value1)).click()\n.venv/lib/python3.12/site-packages/selene/core/entity.py:540: in click\n    self.wait.for_(\n.venv/lib/python3.12/site-packages/selene/core/wait.py:150: in for_\n    return self._decorator(self)(logic)(fn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfn = <selene.core.wait.Command object at 0x1075b2810>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n                return fn(self.entity)\n            except Exception as reason:\n                if time.time() > finish_time:\n                    reason_string = '{name}: {message}'.format(\n                        name=reason.__class__.__name__,\n                        message=getattr(reason, \"msg\", str(reason)),\n                    )\n                    # TODO: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                    # stacktrace = getattr(reason, 'stacktrace', None)\n                    # TODO: should we have an option to turn on stacktrace logging?\n                    timeout = self._timeout\n                    entity = self.entity\n    \n                    # if it's a normal function, it should have __qualname__,\n                    # then use it, otherwise use str(fn)\n                    fn_name = getattr(\n                        fn,\n                        '__qualname__',\n                        getattr(fn, '__str__', lambda: str(fn))(),\n                    )\n    \n                    failure = TimeoutException(\n                        f'\\n'\n                        f'\\nTimed out after {timeout}s, while waiting for:'\n                        f'\\n{entity}.{fn_name}'\n                        f'\\n'\n                        f'\\nReason: {reason_string}'\n                    )\n    \n>                   raise self._hook_failure(failure)\nE                   selene.core.exceptions.TimeoutException: Message: \nE                   \nE                   Timed out after 4.0s, while waiting for:\nE                   browser.all(('css selector', '.custom-checkbox')).element_by(has exact text Sports).click\nE                   \nE                   Reason: ElementClickInterceptedException: Element <div class=\"custom-control custom-checkbox custom-control-inline\"> is not clickable at point (492,579) because another element <td> obscures it; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE                   Screenshot: file:///Users/maxnovo/.selene/screenshots/1753092943173/1753092943173.png\nE                   PageSource: file:///Users/maxnovo/.selene/screenshots/1753092943173/1753092943173.html\n\n.venv/lib/python3.12/site-packages/selene/core/wait.py:148: TimeoutException"}, "steps": [{"name": "Открываем браузер и удаляем рекламу", "status": "passed", "start": 1753092945209, "stop": 1753092979545}, {"name": "Заполняем имя: 'Max'", "status": "passed", "parameters": [{"name": "value", "value": "'Max'"}], "start": 1753092979545, "stop": 1753092979607}, {"name": "Заполняем фамилию: 'Razzhivin'", "status": "passed", "parameters": [{"name": "value", "value": "'Razzhivin'"}], "start": 1753092979607, "stop": 1753092979618}, {"name": "Заполняем почту: 'max.nvo06@gmail.com'", "status": "passed", "parameters": [{"name": "value", "value": "'max.nvo06@gmail.com'"}], "start": 1753092979618, "stop": 1753092979630}, {"name": "Выбираем пол: 'Male'", "status": "passed", "parameters": [{"name": "value", "value": "'Male'"}], "start": 1753092979630, "stop": 1753092979861}, {"name": "Заполняем номер телефона: '9094618666'", "status": "passed", "parameters": [{"name": "value", "value": "'9094618666'"}], "start": 1753092979861, "stop": 1753092979873}, {"name": "Заполняем дату рождения: '1989' 'Apr' '06'", "status": "passed", "parameters": [{"name": "year", "value": "'1989'"}, {"name": "month", "value": "'Apr'"}, {"name": "day", "value": "'06'"}], "start": 1753092979873, "stop": 1753092980255}, {"name": "Выбираем предметы: 'Computer Science'", "status": "passed", "parameters": [{"name": "value", "value": "'Computer Science'"}], "start": 1753092980255, "stop": 1753092980314}, {"name": "Выбираем хобби: 'Sports' 'Reading'", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4.0s, while waiting for:\nbrowser.all(('css selector', '.custom-checkbox')).element_by(has exact text Sports).click\n\nReason: ElementClickInterceptedException: Element <div class=\"custom-control custom-checkbox custom-control-inline\"> is not clickable at point (492,579) because another element <td> obscures it; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nScreenshot: file:///Users/maxnovo/.selene/screenshots/1753092943173/1753092943173.png\nPageSource: file:///Users/maxnovo/.selene/screenshots/1753092943173/1753092943173.html\n\n", "trace": "  File \"/Users/maxnovo/Desktop/qa.guru/18.08 Page_Object/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/maxnovo/Desktop/qa.guru/18.08 Page_Object/pages/registration_page.py\", line 92, in fill_hobbies\n    self.all_hobbies_field.element_by(have.exact_text(value1)).click()\n  File \"/Users/maxnovo/Desktop/qa.guru/18.08 Page_Object/.venv/lib/python3.12/site-packages/selene/core/entity.py\", line 540, in click\n    self.wait.for_(\n  File \"/Users/maxnovo/Desktop/qa.guru/18.08 Page_Object/.venv/lib/python3.12/site-packages/selene/core/wait.py\", line 150, in for_\n    return self._decorator(self)(logic)(fn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/maxnovo/Desktop/qa.guru/18.08 Page_Object/.venv/lib/python3.12/site-packages/selene/core/wait.py\", line 148, in logic\n    raise self._hook_failure(failure)\n"}, "parameters": [{"name": "value1", "value": "'Sports'"}, {"name": "value2", "value": "'Reading'"}], "start": 1753092980314, "stop": 1753092984448}], "attachments": [{"name": "stderr", "source": "68e9bef9-0901-46b3-a8a9-07912d258d21-attachment.txt", "type": "text/plain"}], "start": 1753092945209, "stop": 1753092984454, "uuid": "b7d3f6c6-dfc6-47f3-938e-74464ae915f8", "historyId": "f8638fbca7d3fb3e8502a78a75c9b25b", "testCaseId": "f8638fbca7d3fb3e8502a78a75c9b25b", "fullName": "tests.test_page_object#test_complete_do", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "Форма для заполнения студентом своих данных"}, {"name": "owner", "value": "Max Razzhivin"}, {"name": "story", "value": "Форма корректно заполняется и результаты корректные"}, {"name": "tag", "value": "web"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_page_object"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "24558-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_page_object"}], "links": [{"type": "Test", "url": "https://demoqa.com/automation-practice-form", "name": "https://demoqa.com/automation-practice-form"}]}