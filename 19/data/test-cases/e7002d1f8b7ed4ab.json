{"uid":"e7002d1f8b7ed4ab","name":"Успешная регистрация студента с полными данными","fullName":"tests.test_page_object#test_complete_do","historyId":"f8638fbca7d3fb3e8502a78a75c9b25b","time":{"start":1752867485776,"stop":1752867485776,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location","statusTrace":"self = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x7f953fd8fb60>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n        browser = self._options.capabilities[\"browserName\"]\n        try:\n            path = self._service.path\n            if path:\n                logger.debug(\n                    \"Skipping Selenium Manager; path to %s driver specified in Service class: %s\", browser, path\n                )\n                if not Path(path).is_file():\n>                   raise ValueError(f\"The path is not a valid file: {path}\")\nE                   ValueError: The path is not a valid file: /usr/local/bin/chromedriver\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/common/driver_finder.py:64: ValueError\n\nThe above exception was the direct cause of the following exception:\n\n    @pytest.fixture(scope='function', autouse=True)\n    def browser_management():\n        browser.config.window_height = os.getenv('window_height', 1800)\n        browser.config.window_width = os.getenv('window_width', 1169)\n        browser.config.base_url = os.getenv('base_url', 'https://demoqa.com')\n        browser.config.timeout = float(os.getenv('timeout', '4'))\n    \n        driver_options = webdriver.ChromeOptions()\n    \n        if os.getenv('CI'):\n            driver_options.add_argument(\n                '--headless=new')  # обязательно 'new' для последних версий Chrome\n            driver_options.add_argument('--no-sandbox')\n            driver_options.add_argument('--disable-dev-shm-usage')\n    \n            # Указание пути к ChromeDriver вручную\n            service = Service(executable_path='/usr/local/bin/chromedriver')\n>           browser.config.driver = webdriver.Chrome(service=service,\n                                                     options=driver_options)\n\ntests/conftest.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/chrome/webdriver.py:47: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/chromium/webdriver.py:53: in __init__\n    if finder.get_browser_path():\n       ^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/common/driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n           ^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x7f953fd8fb60>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n        browser = self._options.capabilities[\"browserName\"]\n        try:\n            path = self._service.path\n            if path:\n                logger.debug(\n                    \"Skipping Selenium Manager; path to %s driver specified in Service class: %s\", browser, path\n                )\n                if not Path(path).is_file():\n                    raise ValueError(f\"The path is not a valid file: {path}\")\n                self._paths[\"driver_path\"] = path\n            else:\n                output = SeleniumManager().binary_paths(self._to_args())\n                if Path(output[\"driver_path\"]).is_file():\n                    self._paths[\"driver_path\"] = output[\"driver_path\"]\n                else:\n                    raise ValueError(f\"The driver path is not a valid file: {output['driver_path']}\")\n                if Path(output[\"browser_path\"]).is_file():\n                    self._paths[\"browser_path\"] = output[\"browser_path\"]\n                else:\n                    raise ValueError(f\"The browser path is not a valid file: {output['browser_path']}\")\n        except Exception as err:\n            msg = f\"Unable to obtain driver for {browser}\"\n>           raise NoSuchDriverException(msg) from err\nE           selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/common/driver_finder.py:78: NoSuchDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser_management","time":{"start":1752867485777,"stop":1752867485777,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1195, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 922, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/Selene-PageObject/Selene-PageObject/tests/conftest.py\", line 34, in browser_management\n    browser.config.driver = webdriver.Chrome(service=service,\n                            ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n                                             options=driver_options)\n                                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/chrome/webdriver.py\", line 47, in __init__\n    super().__init__(\n    ~~~~~~~~~~~~~~~~^\n        browser_name=DesiredCapabilities.CHROME[\"browserName\"],\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<3 lines>...\n        keep_alive=keep_alive,\n        ^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/chromium/webdriver.py\", line 53, in __init__\n    if finder.get_browser_path():\n       ~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/common/driver_finder.py\", line 47, in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n           ~~~~~~~~~~~~~~~~~~^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/common/driver_finder.py\", line 78, in _binary_paths\n    raise NoSuchDriverException(msg) from err\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"web"},{"name":"story","value":"Форма корректно заполняется и результаты корректные"},{"name":"owner","value":"Max Razzhivin"},{"name":"feature","value":"Форма для заполнения студентом своих данных"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_page_object"},{"name":"host","value":"pkrvmq0rgcvqdmg"},{"name":"thread","value":"4325-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_page_object"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://demoqa.com/automation-practice-form","url":"https://demoqa.com/automation-practice-form","type":"Test"}],"hidden":false,"retry":false,"extra":{"severity":"critical","owner":"Max Razzhivin","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":5,"unknown":0,"total":10},"items":[{"uid":"2bea52b8f1ae1130","reportUrl":"https://MaxRazzhivin.github.io/Selene-PageObject/18//#testresult/2bea52b8f1ae1130","status":"broken","statusDetails":"AttributeError: module 'selenium.webdriver.chrome.options' has no attribute 'capabilities'","time":{"start":1752687998288,"stop":1752687998288,"duration":0}},{"uid":"253a07cfba243d5e","reportUrl":"https://MaxRazzhivin.github.io/Selene-PageObject/17//#testresult/253a07cfba243d5e","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location","time":{"start":1752685977051,"stop":1752685977051,"duration":0}},{"uid":"fb68fe80ab7b0f1a","reportUrl":"https://MaxRazzhivin.github.io/Selene-PageObject/16//#testresult/fb68fe80ab7b0f1a","status":"broken","statusDetails":"AttributeError: module 'selenium.webdriver.chrome.options' has no attribute 'capabilities'","time":{"start":1752685731898,"stop":1752685731898,"duration":0}},{"uid":"81186906a6e6aa3d","reportUrl":"https://MaxRazzhivin.github.io/Selene-PageObject/15//#testresult/81186906a6e6aa3d","status":"passed","time":{"start":1752680765754,"stop":1752680780342,"duration":14588}},{"uid":"46886046f0924444","reportUrl":"https://MaxRazzhivin.github.io/Selene-PageObject/14//#testresult/46886046f0924444","status":"passed","time":{"start":1751987772766,"stop":1751987785793,"duration":13027}},{"uid":"58eaf1a08a52a79a","reportUrl":"https://MaxRazzhivin.github.io/Selene-PageObject/13//#testresult/58eaf1a08a52a79a","status":"broken","statusDetails":"urllib3.exceptions.ReadTimeoutError: HTTPConnectionPool(host='localhost', port=41785): Read timed out. (read timeout=120)","time":{"start":1751987197307,"stop":1751987318509,"duration":121202}},{"uid":"b52bb5387846c735","reportUrl":"https://MaxRazzhivin.github.io/Selene-PageObject/12//#testresult/b52bb5387846c735","status":"passed","time":{"start":1751962169359,"stop":1751962176192,"duration":6833}},{"uid":"5066abd0910dd3df","reportUrl":"https://MaxRazzhivin.github.io/Selene-PageObject/11//#testresult/5066abd0910dd3df","status":"passed","time":{"start":1751960759876,"stop":1751960764306,"duration":4430}},{"uid":"3b714670f6a9eb60","reportUrl":"https://MaxRazzhivin.github.io/Selene-PageObject/10//#testresult/3b714670f6a9eb60","status":"passed","time":{"start":1751956537214,"stop":1751956542521,"duration":5307}}]},"tags":["web"]},"source":"e7002d1f8b7ed4ab.json","parameterValues":[]}